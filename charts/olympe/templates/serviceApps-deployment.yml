{{ $accountName := (include "olympe.serviceAccountName" .) }}
{{ $values := .Values}}
{{ $c := .Chart}}
{{- range $k, $v := .Values.serviceApps }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" $ | nindent 4 }}
    name: {{ printf "%s-%s" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
    app.kubernetes.io/component: backend
spec:
  {{- if eq $.Values.enabled true }}
  replicas: {{ .replicas }}
  {{- else }}
  replicas: 0
  {{- end }}
  selector:
    matchLabels:
      {{- include "olympe.selectorLabels" $ | nindent 6 }}
      name: {{ printf "%s-%s" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
  template:
    metadata:
      labels:
        {{- include "olympe.selectorLabels" $ | nindent 8 }}
        name: {{ printf "%s-%s" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/component: backend
    spec:
    {{- with $values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ $accountName }}
      securityContext:
        runAsUser: 1000
      containers:
        - name: {{ $k }}
          workingDir: /home/node/app/
          securityContext:
            allowPrivilegeEscalation: false
          image: {{ default $values.serviceAppsImage .image }}
          imagePullPolicy: {{ $values.image.pullPolicy }}
          {{ if $v.ports }}
          ports:
            {{ range $v.ports }}
            - containerPort: {{ $v.targetPort }}
            {{ end }}
          {{ end }}
          resources:
            {{- toYaml $v.resources | nindent 12 }}
          env:
            - name: ORCHESTRATOR_HOST
              value: orchestrator
            - name: ORCHESTRATOR_PORT
              value: "8080"
            - name: ORCHESTRATOR_SSL
              value: "false"
            {{- with (first $.Values.ingress.hosts) }}
            - name: APP_HOSTNAME
              value: {{ . }}
            {{- end }}
            - name: JS_SCRIPT
              value: /home/node/app/main.js
          {{- if $v.env }}
            {{- toYaml $v.env | nindent 12 }}
          {{ end }}
          envFrom:
            {{- if $v.configMapData }}
            {{- if gt (len $v.configMapData) 0 }}
            - configMapRef:
                name: {{ printf "%s-config" $k }}
            {{- end }}
            {{- end }}
            {{- if $v.secretData }}
            {{- if gt (len $v.secretData) 0 }}
            - secretRef:
                name: {{ printf "%s-secret" $k }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - mountPath: /test
              name: test-volume
            {{- if $v.oConfig }}
            - name: backend-oconfig
              mountPath: /home/node/app/conf.d
            {{- end }}
            {{ if $v.volumeMounts }}
              {{- toYaml $v.volumeMounts | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- if $v.enableDefaultProbe }}
            httpGet:
              path: /readiness
              port: 3141
            timeoutSeconds: 5
            initialDelaySeconds: 5
            {{- else }}
            {{- toYaml $v.livenessProbe | nindent 12 }}
            {{- end }}
          readinessProbe:
            {{- toYaml $v.readinessProbe | nindent 12 }}
          startupProbe:
            {{- if $v.enableDefaultProbe }}
            httpGet:
              path: /readiness
              port: 3141
            timeoutSeconds: 5
            initialDelaySeconds: 5
            {{- else }}
            {{- toYaml $v.startupProbe | nindent 12 }}
            {{- end }}
      volumes:
        - name: test-volume
          emptyDir: {}
        {{- if $v.oConfig }}
        - name: backend-oconfig
          secret:
            secretName: {{ printf "%s-%s-oconfig" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
        {{- end }}
        {{ if $v.volumes }}
        {{- toYaml $v.volumes | nindent 8 }}
        {{- end }}
    {{- if $v.nodeSelector }}
    {{- with $v.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- end }}
    {{- with $v.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $v.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
{{- if $v.configMapData }}
{{- if gt (len $v.configMapData) 0 }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-config" $k }}
data:
  {{- range $key, $val := $v.configMapData }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- if $v.secretData }}
{{- if gt (len $v.secretData) 0 }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-secret" $k }}
type: Opaque
data:
  {{- range $key, $val := $v.secretData }}
  {{ $key }}: {{ $val }}
  {{- end }}
---
{{- end }}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%s" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
spec:
  selector:
    {{- include "olympe.selectorLabels" $ | nindent 4 }}
    name: {{ printf "%s-%s" (include "olympe.fullname" $) $k | trunc 63 | trimSuffix "-" }}
  ports:
    - name: runtime
      protocol: TCP
      port: 3141
      targetPort: 3141
    - name: webservice
      protocol: TCP
      port: 80
      targetPort: {{ $.Values.serviceAppsDefaultPort }}
    {{- if $v.ports }}
    {{- toYaml $v.ports | nindent 4 }}
    {{- end }}
---
{{ end }}

