{{- if .Values.orchestrator.neo4j.resetDB -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s" (include "olympe.fullname" .) (lower .Values.toolkit.action) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: reset
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "%s-%s" (include "olympe.fullname" .) (lower .Values.toolkit.action) | trunc 63 | trimSuffix "-" }}
    spec:
      volumes:
        - name: backup-data
          persistentVolumeClaim:
            claimName: {{ printf "%s-orchestrator-backup-data" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
      containers:
        - name: reset
          image: "{{ default .Values.appRepository .Values.toolkit.image.repository }}/{{ .Values.toolkit.image.name }}:{{ default .Chart.AppVersion .Values.toolkit.image.tag }}"
          envFrom:
            - configMapRef:
                name: {{ printf "%s-orchestrator-config" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: {{ printf "%s-orchestrator-secret" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: orchestrator-default-secret
                optional: true
          env:
            - name: COMMAND
              value: reset
            - name: BACKUP_USERS
              value: "false"
            - name: BACKUP_DATA
              value: "false"
            - name: RABBITMQ_PATCHES_DIR
              value: /patches
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
          volumeMounts:
            - name: backup-data
              mountPath: /backupData
            {{- if .Values.serviceApps }}
            - name: nodes
              mountPath: /nodes
            {{- end }}
      restartPolicy: Never
      serviceAccountName: {{ include "olympe.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.toolkit.podSecurityContext | nindent 8 }}
  backoffLimit: 4
{{- end }}
{{- range .Values.toolkit.cronJobs }}
---
{{- if semverCompare ">=1.20.x" $.Capabilities.KubeVersion.Version }}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "olympe.fullname" $) (lower .name) | trunc 52 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" $ | nindent 4 }}
    app.kubernetes.io/part-of: toolkit
    app.kubernetes.io/component: {{ .name }}
spec:
  suspend: {{ default false .suspend }}
  schedule: {{ .schedule | quote }}
  successfulJobsHistoryLimit: {{ default 1 .successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 2 .failedJobsHistoryLimit }}
  startingDeadlineSeconds: {{ default 360 .failedJobsHistoryLimit }}
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        {{- include "olympe.labels" $ | nindent 8 }}
        app.kubernetes.io/part-of: toolkit
        app.kubernetes.io/component: {{ .name }}
    spec:
      backoffLimit: {{ default 0 .backoffLimit }}
      template:
        metadata:
          name: {{ printf "%s-%s" (include "olympe.fullname" $) (lower .name) | trunc 52 | trimSuffix "-" }}
          labels:
            {{- include "olympe.selectorLabels" $ | nindent 12 }}
            app.kubernetes.io/part-of: toolkit
            app.kubernetes.io/component: {{ .name }}
        spec:
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "olympe.serviceAccountName" $ }}
          containers:
            - name: {{ (lower .name) }}
              image: "{{ default $.Values.toolkit.image.repository ((.image).repository) }}/{{ default $.Values.toolkit.image.name ((.image).name) }}:{{ default $.Values.toolkit.image.tag ((.image).tag) }}"
              imagePullPolicy: {{ default "IfNotPresent" .imagePullPolicy }}
              {{ if .resources }}
              resources:
                {{- toYaml .resources | nindent 16 }}
              {{- end }}
              {{ if .args }}
              args:
                {{- toYaml .args | nindent 16 }}
              {{- end }}
              envFrom:
              - configMapRef:
                  name: {{ printf "%s-orchestrator-config" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
              - secretRef:
                  name: {{ printf "%s-orchestrator-secret" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
              - secretRef:
                  name: orchestrator-default-secret
                  optional: true
              env:
              - name: COMMAND
                value: {{ .command }}
              - name: ORCHESTRATOR_HOST
                value: orchestrator
              {{ if .env }}
                {{- toYaml .env | nindent 14 }}
              {{- end }}
              {{ if $.Values.toolkit.env }}
                {{- toYaml $.Values.toolkit.env | nindent 14 }}
              {{- end }}
              volumeMounts:
              - name: backup-data
                mountPath: /backupData
          restartPolicy: {{ default "Never" .restartPolicy }}
          volumes:
          - name: backup-data
            persistentVolumeClaim:
              claimName: {{ printf "%s-orchestrator-backup-data" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
{{- end }}