{{- if .Values.orchestrator.neo4j.resetDB -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s" (include "olympe.fullname" .) (lower .Values.toolkit.action) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: reset
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "%s-%s" (include "olympe.fullname" .) (lower .Values.toolkit.action) | trunc 63 | trimSuffix "-" }}
    spec:
      volumes:
        - name: backup-data
          persistentVolumeClaim:
            claimName: {{ printf "%s-orchestrator-backup-data" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
      containers:
        - name: install
          image: "{{ default .Values.appRepository .Values.toolkit.image.repository }}/{{ .Values.toolkit.image.name }}:{{ default .Chart.AppVersion .Values.toolkit.image.tag }}"
          args:
            - install
          envFrom:
            - configMapRef:
                name: {{ printf "%s-orchestrator-config" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: {{ printf "%s-orchestrator-secret" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
            - secretRef:
                name: orchestrator-default-secret
                optional: true
          env:
            - name: ORCHESTRATOR_HOST
              value: orchestrator
          {{ if $.Values.toolkit.env }}
            {{- toYaml $.Values.toolkit.env | nindent 14 }}
          {{- end }}
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
          volumeMounts:
            - name: backup-data
              mountPath: /backupData
      restartPolicy: Never
      serviceAccountName: {{ include "olympe.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.toolkit.podSecurityContext | nindent 8 }}
  backoffLimit: 4
{{- end }}
{{- range $name, $values := .Values.toolkit.cronJobs }}
---
{{- if semverCompare ">=1.20.x" $.Capabilities.KubeVersion.Version }}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "olympe.fullname" $) (lower $name) | trunc 52 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" $ | nindent 4 }}
    app.kubernetes.io/part-of: toolkit
    app.kubernetes.io/component: {{ $name }}
spec:
  suspend: {{ default true $values.suspend }}
  schedule: {{ $values.schedule | quote }}
  successfulJobsHistoryLimit: {{ default 1 $values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 2 $values.failedJobsHistoryLimit }}
  startingDeadlineSeconds: {{ default 360 $values.startingDeadlineSeconds }}
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        {{- include "olympe.labels" $ | nindent 8 }}
        app.kubernetes.io/part-of: toolkit
        app.kubernetes.io/component: {{ $name }}
    spec:
      backoffLimit: {{ default 0 .backoffLimit }}
      template:
        metadata:
          name: {{ printf "%s-%s" (include "olympe.fullname" $) (lower $name) | trunc 52 | trimSuffix "-" }}
          labels:
            {{- include "olympe.selectorLabels" $ | nindent 12 }}
            app.kubernetes.io/part-of: toolkit
            app.kubernetes.io/component: {{ $name }}
        spec:
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "olympe.serviceAccountName" $ }}
          containers:
            - name: {{ (lower $name) }}
              image: "{{ default $.Values.toolkit.image.repository (($values.image).repository) }}/{{ default $.Values.toolkit.image.name (($values.image).name) }}:{{ default $.Values.toolkit.image.tag (($values.image).tag) }}"
              imagePullPolicy: {{ default "IfNotPresent" $values.imagePullPolicy }}
              {{ if $values.resources }}
              resources:
                {{- toYaml $values.resources | nindent 16 }}
              {{- end }}
              {{ if $values.args }}
              args:
                {{- toYaml $values.args | nindent 16 }}
              {{- end }}
              envFrom:
              - configMapRef:
                  name: {{ printf "%s-orchestrator-config" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
              - secretRef:
                  name: {{ printf "%s-orchestrator-secret" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
              - secretRef:
                  name: orchestrator-default-secret
                  optional: true
              env:
              - name: ORCHESTRATOR_HOST
                value: orchestrator
              {{- if gt (len $.Values.snapshooters) 0 }}
              {{- with (index $.Values.snapshooters 0) }}
              - name: SNAPSHOT_CONFIG
                value: /config
              {{- end }}
              {{- end }}
              {{ if $values.env }}
                {{- toYaml $values.env | nindent 14 }}
              {{- end }}
              {{ if $.Values.toolkit.env }}
                {{- toYaml $.Values.toolkit.env | nindent 14 }}
              {{- end }}
              volumeMounts:
              - name: backup-data
                mountPath: /backupData
              {{- if gt (len $.Values.snapshooters) 0 }}
              - name: {{ printf "%s-snapshooter-config" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
                mountPath: /config
              {{- end }}
          restartPolicy: {{ default "Never" .restartPolicy }}
          volumes:
          - name: backup-data
            persistentVolumeClaim:
              claimName: {{ printf "%s-orchestrator-backup-data" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
          {{- if gt (len $.Values.snapshooters) 0 }}
          - name: {{ printf "%s-snapshooter-config" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
            secret:
              secretName: {{ printf "%s-snapshooter-config" (include "olympe.fullname" $) | trunc 63 | trimSuffix "-" }}
          {{- end }}
{{- end }}