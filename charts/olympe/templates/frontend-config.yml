apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-frontend-config" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  {{- with (first .Values.ingress.hosts) }}
  APP_HOSTNAME: {{ . }}
  {{- end }}
  TLS_TYPE: "http-only"
  APP_PORT: "443"
  {{- range $key, $val := .Values.frontend.env }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-frontend-server-config" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  app.conf: |

    root /usr/share/nginx/html;

    location / {

    }

    location /OlympeServer/websocket {
      proxy_pass http://gateway/OlympeServer/websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_connect_timeout 7d;
      proxy_send_timeout 7d;
      proxy_read_timeout 7d;
    }

    location /OlympeServer/rest {
      proxy_pass http://gateway;
      proxy_http_version 1.1;
      client_max_body_size 3000M;
      proxy_connect_timeout       900;
      proxy_send_timeout          900;
      proxy_read_timeout          900;
      send_timeout                900;
    }

    location /OlympeServer/metrics {
      proxy_pass http://micrometer/metrics;
      proxy_http_version 1.1;
    }

    location /OlympeServer/status {
      proxy_pass http://gateway/status;
      proxy_http_version 1.1;
      expires -1;
      add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    }

    location ~* \.(json)$ {
      add_header 'Cache-Control' 'no-cache, must-revalidate, proxy-revalidate, max-age=0';
    }

    location /OlympeServer/rest/querysvc/graphDef/static {
      proxy_pass http://gateway;
      proxy_http_version 1.1;
      client_max_body_size 50M;
      proxy_connect_timeout 900;
      proxy_send_timeout 900;
      proxy_read_timeout 900;
      send_timeout 900;
      
      proxy_cache_key "$scheme$host$uri$is_args$arg_query$arg_v";
      proxy_cache graphDef_cache;
      proxy_cache_methods GET;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 200 1M;
      add_header X-Cache-Status $upstream_cache_status;
    }
    
    include /etc/nginx/subconf.d/*.conf;

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-frontend-custom-config" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  http.conf: |

      tcp_nopush on;
      tcp_nodelay on;
      types_hash_max_size 2048;


      server_tokens off;

      error_log /var/log/nginx/error.log;

      ##
      # Rate Limiting Settings
      ##

      limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

      ##
      # Cache Settings
      ##

      proxy_cache_path /var/cache/nginx keys_zone=nginxcache:20m;
      proxy_cache_path /var/cache/nginx/graphdef levels=1:2 keys_zone=graphDef_cache:1m max_size=200m inactive=1M;

      ##
      # Gzip Settings
      ##

      gzip on;
      gzip_vary on;
      gzip_static on;
      gzip_disable "msie6";
      gzip_proxied any;
      gzip_comp_level 1;
      gzip_min_length 1000;
      gzip_types
        application/javascript
        application/x-javascript
        text/javascript
        text/html
        text/css;

      ##
      # Virtual Host Configs
      ##

      include /etc/nginx/sites-enabled/*;
      add_header Strict-Transport-Security "max-age=15768000; includeSubdomains" always;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Xss-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      client_max_body_size 8M;
      client_body_buffer_size 10K;
      client_header_buffer_size 1k;

      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      upstream gateway {
        server {{ printf "%s-orchestrator" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}:8080;
      }

      upstream micrometer {
        server {{ printf "%s-orchestrator" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}:8081;
      }

      server {
        proxy_cache nginxcache;
        listen {{ .Values.frontend.port }};
        listen [::]:{{ .Values.frontend.port }};
        {{- with (first .Values.ingress.hosts) }}
        server_name {{ . }};
        {{- end }}
        
        include /etc/nginx/server/*.conf;
        include /etc/nginx/site[.]conf;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
        large_client_header_buffers 4 64k;

        location ^~ /olympe-admin {
          gunzip on;
          alias /usr/share/nginx/html;
        }
      }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-frontend-subconf" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  additional.conf: {{ default "" .Values.frontend.additionalConfig | quote }}
  backend.conf: |
{{- $defaultBackend := "" }}
{{- range $k, $v := .Values.serviceApps }}
    location /{{ $k }}/runtime {
      client_max_body_size 100M;
      proxy_pass http://{{ printf "%s-%s" $.Release.Namespace $k }}:3141/runtime;
    }
  {{- if and (.defaultBackend) (eq $defaultBackend "") }}
  {{ $defaultBackend = $k }}
    location /runtime {
      client_max_body_size 100M;
      proxy_pass http://{{ printf "%s-%s" $.Release.Namespace $k }}:3141/runtime;
    }
  {{- end }}
  {{- if .webservices }}
  {{- range .webservices }}
    location {{ .uri }} {
      proxy_pass http://{{ printf "%s-%s" $.Release.Namespace $k }}:{{ default 80 .port }}{{ default .uri .targetUri }};
    }
  {{- end }}
  {{- end }}
{{ end }}
---
{{- if .Values.frontend.oConfig }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-frontend-oconfig" (include "olympe.fullname" .) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "olympe.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  oConfig.json: {{ default "" .Values.frontend.oConfig | quote }}
{{ end }}